<?php

namespace Equinoxe\DataStoreBundle\Entity;

/**
 * Test class for DataStore.
 * Generated by PHPUnit on 2011-01-19 at 11:40:35.
 */
class DataStoreTest extends \Equinoxe\TestBundle\Test\WebTestCase {

    /**
     * @var DataStore
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->container = $this->createContainer();
        $this->object = new DataStore($this->container);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @todo Implement testGetUid().
     */
    public function testGetUid() {
        $this->object->setUid(5);
        $this->assertSame(5, $this->object->getUid());
        $match = false;
        try {
            $this->object->setUid('xyz');
        } catch (\InvalidArgumentException $e) {
            $match = true;
        } catch (\Exception $e) {
            $this->fail('Only integer should be accepted for $uid. An unexpected exception was raised.');
        }
        if($match == false) {
            $this->fail('Only integer should be accepted for $uid. Expected exception was not raised.');
        }
    }

    /**
     * @todo Implement testSetUid().
     */
    public function testSetUid() {
        $this->object->setUid(6);
        $this->assertSame(6, $this->object->getUid());
        $match = false;
        try {
            $this->object->setUid('xyz');
        } catch (\InvalidArgumentException $e) {
            $match = true;
        } catch (\Exception $e) {
            $this->fail('Only integer should be accepted for $uid. An unexpected exception was raised.');
        }
        if($match == false) {
            $this->fail('Only integer should be accepted for $uid. Expected exception was not raised.');
        }
    }

    /**
     * @todo Implement testGetName().
     */
    public function testGetName() {
        $this->object->setName('foo');
        $this->assertSame('foo', $this->object->getName());
    }

    /**
     * @todo Implement testSetName().
     */
    public function testSetName() {
        $this->object->setName('bar');
        $this->assertSame('bar', $this->object->getName());
    }

}
